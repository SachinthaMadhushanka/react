{"version":3,"sources":["Styles.module.css","Components/Validation/Validation.js","Layout/MainNavigation.js","Layout/Layout.js","Pages/HomePage.js","Pages/AboutPage.js","hooks/use-input.js","Components/Login/LoginForm.js","Pages/LoginPage.js","Components/Signup/SignupForm.js","Pages/SignupPage.js","App.js","Store/auth-context.js","index.js"],"names":["module","exports","isNotEmpty","value","trim","isEmail","email","test","String","toLowerCase","isValidMobileNumber","number","isValidPassword","password","RegExp","isValidConfirmPassword","confirmPassword","MainNavigation","Navbar","bg","variant","expand","sticky","Col","md","span","offset","exact","to","className","styles","activeClassName","Toggle","aria-controls","Collapse","id","Container","Row","Layout","props","children","LoginPage","useInput","validateValue","useState","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","isValid","hasError","valueChangeHandler","event","target","inputBlurHandler","reset","BasicForm","emailValue","emailIsValid","emailHasError","emailChangeHandler","emailBlurHandler","resetEmail","passwordValue","passwordIsValid","passwordHasError","passwordChangeHandler","passwordBlurHandler","resetPassword","formIsValid","isEntering","setIsEntering","when","message","location","Form","onSubmit","preventDefault","console","log","onFocus","FormGroup","FormControl","type","onChange","onBlur","placeholder","Button","disabled","onClick","LoginForm","axios","require","firstNameValue","firstNameIsValid","firstNameHasError","firstNameChangeHandler","firstNameBlurHandler","resetFirstName","lastNameValue","lastNameIsValid","lastNameHasError","lastNameChangeHandler","lastNameBlurHandler","resetLastName","mobileNumberValue","mobileNumberIsValid","mobileNumberHasError","mobileNumberChangeHandler","mobileNumberBlurHandler","resetMobileNumber","bind","confirmPasswordValue","confirmPasswordIsValid","confirmPasswordHasError","confirmPasswordChangeHandler","confirmPasswordBlurHandler","resetConfirmPassword","method","url","data","firstname","lastname","mobile_number","then","result","catch","err","SignupPage","SignupForm","App","logoutTimer","path","HomePage","AboutPage","AuthContext","React","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","AuthContextProvider","initialToken","tokenData","storedToken","localStorage","getItem","storedExpirationDate","remainingTime","removeItem","duration","retrieveStoredToken","setToken","userIsLoggedIn","logoutHandler","useCallback","clearTimeout","useEffect","setTimeout","contextValue","setItem","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.82986d97.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-link\":\"Styles_nav-link__p-frV\",\"active-nav-link\":\"Styles_active-nav-link__2kCc3\",\"signup-form\":\"Styles_signup-form__3yxbf\"};","// Validation funcs\nexports.isNotEmpty = (value) => value.trim() !== \"\";\n\nexports.isEmail = (email) => {\n  const re =\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n};\n\nexports.isValidMobileNumber = (number) => {\n  const re = /^\\d{10}$/;\n  return re.test(String(number));\n};\n\nexports.isValidPassword = (password) => {\n  const re = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})\");\n  return re.test(String(password));\n};\n\nexports.isValidConfirmPassword = (password, confirmPassword) => {\n  if (password === confirmPassword) {\n    return true;\n  }\n  return false;\n};\n","// import { useContext } from 'react';\nimport { Navbar, Container, Col, Row } from \"react-bootstrap\";\nimport { NavLink } from \"react-router-dom\";\nimport styles from \"../Styles.module.css\";\n\n// import AuthContext from '../Store/auth-context';\n\nconst MainNavigation = () => {\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" sticky=\"top\">\n      <Col md={{ span: 1, offset: 1 }}>\n        <NavLink\n          exact\n          to=\"/\"\n          className={styles[\"nav-link\"]}\n          activeClassName={styles[\"active-nav-link\"]}\n        >\n          Homepage\n        </NavLink>\n      </Col>\n\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Container>\n          <Row>\n            <Col md={{ span: 1 }}>\n              <NavLink\n                to=\"/about\"\n                className={styles[\"nav-link\"]}\n                activeClassName={styles[\"active-nav-link\"]}\n              >\n                About\n              </NavLink>\n            </Col>\n\n            <Col md={{ span: 2, offset: 7 }}>\n              <NavLink\n                to=\"/login\"\n                className={styles[\"nav-link\"]}\n                activeClassName={styles[\"active-nav-link\"]}\n              >\n                Login\n              </NavLink>\n            </Col>\n\n            <Col md={{ span: 2 }}>\n              <NavLink\n                to=\"/signup\"\n                className={styles[\"nav-link\"]}\n                activeClassName={styles[\"active-nav-link\"]}\n              >\n                Signup\n              </NavLink>\n            </Col>\n          </Row>\n        </Container>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default MainNavigation;\n","import { Fragment } from \"react\";\n\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import { Container } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <div className=\"row justify-content-center pt-4 pb-4\">\n        <div className=\"col-4\">\n          <h1>Home Page</h1>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import { Container } from \"react-bootstrap\";\nimport React from \"react\";\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <div className=\"row justify-content-center pt-4 pb-4\">\n        <div className=\"col-4\">\n          <h1>About Page</h1>\n        </div>\n      </div>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import { useState } from 'react';\n\nconst useInput = (validateValue) => {\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = (event) => {\n    setIsTouched(true);\n  };\n\n  const reset = () => {\n\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    reset\n  };\n};\n\nexport default useInput;\n","import useInput from \"../../hooks/use-input\";\nimport {\n  Container,\n  Row,\n  Button,\n  FormGroup,\n  FormControl,\n  Form,\n} from \"react-bootstrap\";\nimport styles from \"../../Styles.module.css\";\nimport { useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport { isEmail, isNotEmpty } from \"../Validation/Validation\";\n\nconst BasicForm = (props) => {\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmail); // pass validation func\n\n  const {\n    value: passwordValue,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput(isNotEmpty); // pass validation func\n\n  // Form validation logic (This will check for every key stroke)\n  let formIsValid = false;\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  if (emailIsValid && passwordIsValid) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    console.log(formIsValid);\n    if (!formIsValid) {\n      return;\n    }\n\n    console.log(\"Submitted!\");\n    console.log(emailValue);\n\n    // Reset input fields\n    resetEmail();\n    resetPassword();\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Container>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n\n      <Form\n        onSubmit={submitHandler}\n        className={styles[\"signup-form\"]}\n        onFocus={formFocusedHandler}\n      >\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"text\"\n              id=\"email\"\n              value={emailValue}\n              onChange={emailChangeHandler}\n              onBlur={emailBlurHandler}\n              placeholder=\"Email\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {emailHasError && (\n                <p className=\"error-text\">\n                  Please enter a valid email address.\n                </p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"password\"\n              id=\"password\"\n              value={passwordValue}\n              onChange={passwordChangeHandler}\n              onBlur={passwordBlurHandler}\n              placeholder=\"Password\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {passwordHasError && (\n                <p className=\"error-text\">Please enter a password</p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <Row>\n          <Button\n            disabled={!formIsValid}\n            type=\"submit\"\n            onClick={finishEnteringHandler}\n          >\n            Submit\n          </Button>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default BasicForm;\n","import { Container } from \"react-bootstrap\";\nimport React from \"react\";\nimport LoginForm from \"../Components/Login/LoginForm\";\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <div className=\"row justify-content-center pt-4 pb-4\">\n        <div className=\"col-4\">\n          <h1>Login Page</h1>\n        </div>\n      </div>\n\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import useInput from \"../../hooks/use-input\";\nimport {\n  Container,\n  Row,\n  Button,\n  FormGroup,\n  FormControl,\n  Form,\n} from \"react-bootstrap\";\nimport styles from \"../../Styles.module.css\";\nimport { useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\nimport {\n  isNotEmpty,\n  isEmail,\n  isValidMobileNumber,\n  isValidPassword,\n  isValidConfirmPassword,\n} from \"../Validation/Validation\";\n\nconst axios = require(\"axios\");\n\nconst BasicForm = (props) => {\n  const {\n    value: firstNameValue,\n    isValid: firstNameIsValid,\n    hasError: firstNameHasError,\n    valueChangeHandler: firstNameChangeHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    reset: resetFirstName,\n  } = useInput(isNotEmpty); // pass validation func\n\n  const {\n    value: lastNameValue,\n    isValid: lastNameIsValid,\n    hasError: lastNameHasError,\n    valueChangeHandler: lastNameChangeHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    reset: resetLastName,\n  } = useInput(isNotEmpty); // pass validation func\n\n  const {\n    value: emailValue,\n    isValid: emailIsValid,\n    hasError: emailHasError,\n    valueChangeHandler: emailChangeHandler,\n    inputBlurHandler: emailBlurHandler,\n    reset: resetEmail,\n  } = useInput(isEmail); // pass validation func\n\n  const {\n    value: mobileNumberValue,\n    isValid: mobileNumberIsValid,\n    hasError: mobileNumberHasError,\n    valueChangeHandler: mobileNumberChangeHandler,\n    inputBlurHandler: mobileNumberBlurHandler,\n    reset: resetMobileNumber,\n  } = useInput(isValidMobileNumber); // pass validation func\n\n  const {\n    value: passwordValue,\n    isValid: passwordIsValid,\n    hasError: passwordHasError,\n    valueChangeHandler: passwordChangeHandler,\n    inputBlurHandler: passwordBlurHandler,\n    reset: resetPassword,\n  } = useInput(isValidPassword); // pass validation func\n\n  const {\n    value: confirmPasswordValue,\n    isValid: confirmPasswordIsValid,\n    hasError: confirmPasswordHasError,\n    valueChangeHandler: confirmPasswordChangeHandler,\n    inputBlurHandler: confirmPasswordBlurHandler,\n    reset: resetConfirmPassword,\n  } = useInput(isValidConfirmPassword.bind(null, passwordValue)); // pass validation func\n\n  // Form validation logic (This will check for every key stroke)\n  let formIsValid = false;\n\n  const [isEntering, setIsEntering] = useState(false);\n\n  if (\n    firstNameIsValid &&\n    lastNameIsValid &&\n    emailIsValid &&\n    mobileNumberIsValid &&\n    passwordIsValid &&\n    confirmPasswordIsValid\n  ) {\n    formIsValid = true;\n  }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    console.log(formIsValid);\n    if (!formIsValid) {\n      return;\n    }\n\n    // console.log(\"Submitted!\");\n    // console.log(firstNameValue, lastNameValue, emailValue, mobileNumberValue);\n    axios({\n      method: \"put\",\n      url: \"http://localhost:8080/signup\",\n      data: {\n        firstname: firstNameValue,\n        lastname: lastNameValue,\n        email: emailValue,\n        mobile_number: mobileNumberValue,\n        password: passwordValue,\n      },\n    })\n      .then((result) => {\n        resetFirstName();\n        resetLastName();\n        resetEmail();\n        resetMobileNumber();\n        resetPassword();\n        resetConfirmPassword();\n        console.log(result);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  return (\n    <Container>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n\n      <Form\n        onSubmit={submitHandler}\n        className={styles[\"signup-form\"]}\n        onFocus={formFocusedHandler}\n      >\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"text\"\n              id=\"firstname\"\n              value={firstNameValue} // 2-way binding (from the hook)\n              onChange={firstNameChangeHandler} // from hook\n              onBlur={firstNameBlurHandler} // from hook\n              placeholder=\"First Name\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {firstNameHasError && (\n                <p className=\"error-text\">Please enter a first name.</p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"text\"\n              id=\"lastname\"\n              value={lastNameValue}\n              onChange={lastNameChangeHandler}\n              onBlur={lastNameBlurHandler}\n              placeholder=\"Last Name\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {lastNameHasError && (\n                <p className=\"error-text\">Please enter a last name.</p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"text\"\n              id=\"email\"\n              value={emailValue}\n              onChange={emailChangeHandler}\n              onBlur={emailBlurHandler}\n              placeholder=\"Email\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {emailHasError && (\n                <p className=\"error-text\">\n                  Please enter a valid email address.\n                </p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"text\"\n              id=\"mobile_number\"\n              value={mobileNumberValue}\n              onChange={mobileNumberChangeHandler}\n              onBlur={mobileNumberBlurHandler}\n              placeholder=\"Mobile Number\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {mobileNumberHasError && (\n                <p className=\"error-text\">\n                  Please enter a valid mobile number.\n                </p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"password\"\n              id=\"password\"\n              value={passwordValue}\n              onChange={passwordChangeHandler}\n              onBlur={passwordBlurHandler}\n              placeholder=\"Password\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {passwordHasError && (\n                <p className=\"error-text\">\n                  Password should contain lowercase, uppercase, numerical\n                  character. Minimum length is 8 characters.\n                </p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <FormGroup className=\"mb-4\">\n          <Row className=\"mb-5\">\n            <FormControl\n              type=\"password\"\n              id=\"confirmPassword\"\n              value={confirmPasswordValue}\n              onChange={confirmPasswordChangeHandler}\n              onBlur={confirmPasswordBlurHandler}\n              placeholder=\"Confirm Password\"\n            />\n            <small className=\"text-danger d-flex justify-content-between d-flex justify-content-between\">\n              {confirmPasswordHasError && (\n                <p className=\"error-text\">Passwords does not match</p>\n              )}\n            </small>\n          </Row>\n        </FormGroup>\n\n        <Row>\n          <Button\n            disabled={!formIsValid}\n            type=\"submit\"\n            onClick={finishEnteringHandler}\n          >\n            Submit\n          </Button>\n        </Row>\n      </Form>\n    </Container>\n  );\n};\n\nexport default BasicForm;\n","import { Container } from \"react-bootstrap\";\nimport React from \"react\";\nimport SignupForm from \"../Components/Signup/SignupForm\";\n\nconst SignupPage = () => {\n  return (\n    <Container>\n      <div className=\"row justify-content-center pt-4 pb-4\">\n        <div className=\"col-4\">\n          <h1>Signup Page</h1>\n        </div>\n      </div>\n\n      <SignupForm />\n    </Container>\n  );\n};\n\nexport default SignupPage;\n","// import { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Layout from \"./Layout/Layout\";\nimport HomePage from \"./Pages/HomePage\";\nimport AboutPage from \"./Pages/AboutPage\";\nimport LoginPage from \"./Pages/LoginPage\";\nimport SignupPage from \"./Pages/SignupPage\";\n\n// import AuthContext from \"./Store/auth-context\";\n\nfunction App() {\n  // const authCtx = useContext(AuthContext);\n\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomePage />\n        </Route>\n\n        <Route path=\"/about\" exact>\n          <AboutPage />\n        </Route>\n\n        <Route path=\"/login\" exact>\n          <LoginPage />\n        </Route>\n\n        <Route path=\"/signup\" exact>\n          <SignupPage />\n        </Route>\n\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\n// global object to hold the set time out func\nlet logoutTimer;\n\nconst AuthContext = React.createContext({\n  token: \"\",\n  isLoggedIn: false,\n  login: (token) => {},\n  logout: () => {},\n});\n\n// A function to calculate remaining time to expire\nconst calculateRemainingTime = (expirationTime) => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n\n  return adjExpirationTime - currentTime;\n};\n\n// We cannot just get token from the browser. We need to check expiration time also.\nconst retrieveStoredToken = () => {\n  // get token and expiration time from the browser\n  const storedToken = localStorage.getItem(\"token\");\n  const storedExpirationDate = localStorage.getItem(\"expirationTime\");\n\n  // calculate the remaining time\n  const remainingTime = calculateRemainingTime(storedExpirationDate);\n  // console.log(remainingTime);\n\n  // if remaining time is less than 1 min\n  if (remainingTime <= 3600000) {\n    // remove token and expiration time from the browser\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    // return null as the token\n    return null;\n  }\n\n  // return valid token and expiration time\n  return {\n    token: storedToken,\n    duration: remainingTime,\n  };\n};\n\n// This comp will be only re-evaluated when token state changes. Token state only changed when sign up.\n// If we reload the web page, then this comp will be re-evaluated.\nexport const AuthContextProvider = (props) => {\n  // We cannot just get token from the browser. We need to check expiration time also.\n  const tokenData = retrieveStoredToken();\n\n  let initialToken;\n\n  // If the token data is not null\n  if (tokenData) {\n    initialToken = tokenData.token;\n  }\n\n  const [token, setToken] = useState(initialToken);\n\n  const userIsLoggedIn = !!token;\n\n  // As a callback (Because we use this as a dependency)\n  const logoutHandler = useCallback(() => {\n    setToken(null);\n\n    // Remove token and expiration time from the browser\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expirationTime\");\n\n    // If logoutHandler setTimeOut available clear it\n    if (logoutTimer) {\n      clearTimeout(logoutTimer);\n    }\n  }, []);\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem(\"token\", token);\n    // Store the expiration time also\n    localStorage.setItem(\"expirationTime\", expirationTime);\n\n    // calculate the remaining time to expire\n    const remainingTime = calculateRemainingTime(expirationTime);\n\n    /*\n          Automatically logout after that time. If user reload the webpage This will be removed.\n          So we need to setTimeout Logout func, when component re-evaluates.\n         */\n    logoutTimer = setTimeout(logoutHandler, remainingTime);\n  };\n\n  /*\n      This will execute when tokenData changes\n      When this comp re-evaluating token data will be updated (At least expiration time). So this will be executed.\n     */\n  useEffect(() => {\n    // if token is not null\n    if (tokenData) {\n      // setTimeOut with the remaining time (When If component re evaluates, like reloading)\n      logoutTimer = setTimeout(logoutHandler, tokenData.duration);\n    }\n  }, [tokenData, logoutHandler]);\n\n  // add logoutHandler as a dependency (As a good practice)\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler,\n  };\n\n  return (\n    <AuthContext.Provider value={contextValue}>\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './Store/auth-context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n   <AuthContextProvider>\n       <BrowserRouter>\n           <App />\n       </BrowserRouter>\n   </AuthContextProvider> ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}